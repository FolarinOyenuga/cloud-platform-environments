## Service account used by CircleCI allowed to manipulate anything in the namespace ##

apiVersion: v1
kind: ServiceAccount
metadata:
  name: circleci
  namespace: manage-my-prison-dev

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: circleci
  namespace: manage-my-prison-dev
subjects:
  - kind: ServiceAccount
    name: circleci
    namespace: manage-my-prison-dev
roleRef:
  kind: ClusterRole
  name: edit
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: circleci
  namespace: manage-my-prison-dev
rules:
  # additional permissions not covered by "edit" cluster role:
  - apiGroups:
      - "monitoring.coreos.com"
    resources:
      - "prometheusrules"
    verbs:
      - "*"

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: circleci-additional
  namespace: manage-my-prison-dev
subjects:
  - kind: ServiceAccount
    name: circleci
    namespace: manage-my-prison-dev
roleRef:
  kind: Role
  name: circleci
  apiGroup: rbac.authorization.k8s.io

---
## Service account automatically attached to pods ##

apiVersion: v1
kind: ServiceAccount
metadata:
  name: pod-internal
  namespace: manage-my-prison-dev
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: pod-internal
  namespace: manage-my-prison-dev
rules:
  - apiGroups: [""]
    resources:
      - secrets
    resourceNames:
      - s3
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: pod-internal
  namespace: manage-my-prison-dev
subjects:
  - kind: ServiceAccount
    name: pod-internal
    namespace: manage-my-prison-dev
roleRef:
  kind: Role
  name: pod-internal
  apiGroup: rbac.authorization.k8s.io
